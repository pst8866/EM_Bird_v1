


function Embird_gui_queue

%********************The GUI designing part starts here***************%

%Creates the main window
fig = figure('Tag',mfilename,...
    'Toolbar','none',...
    'MenuBar','none',...
    'IntegerHandle','off',...
    'Units','normalized',...
    'Resize','on',...
    'NumberTitle','off',...
    'HandleVisibility','callback',...
    'Name',sprintf('EM Bird'),...
    'CloseRequestFcn',@localCloseRequestFcn,...
    'Visible','off');
    set(fig,'Visible','on');

%**********Creates a panel to configure IP Address of the Board**********%    

hippanel = uipanel('Parent',fig,...
    'Units','normalized',...
    'Position', [0.02 0.68 0.25 0.29],...
    'Title','Boards Static IP',...
    'TitlePosition','centertop',...
    'Tag','ippanel',...
    'FontWeight','bold');

%*******Creates a text Saying Static IP: above the IP text box******%
     hiptext = uicontrol('Parent',hippanel,...
        'Style','text',...
        'Units','normalized',...
        'Position',[0.05 0.69 0.85 0.3],...
        'BackgroundColor',get(fig,'Color'),...
        'Enable', 'on',...
        'String','Static IP:',...
        'HorizontalAlignment','left',...
        'Tag','staticIPLabel');
    
%************Text box to enter the Board's IP*************************%

     hipdata = uicontrol('Parent',hippanel,...
        'Style','edit',...
        'Units','normalized',...
        'Position',[0.05 0.7 0.85 0.15],...
        'String','169.254.43.90',...
        'Backgroundcolor',[1 1 1],...
        'Enable','on',...
        'Callback','',...                      
        'Tag','changeIP');
    hporttext = uicontrol('Parent',hippanel,...
        'Style','text',...
        'Units','normalized',...
        'Position',[0.05 0.38 0.85 0.3],...
        'Enable', 'on',...
        'BackgroundColor',get(fig,'Color'),...
        'String','Port:',...
        'HorizontalAlignment','left',...
        'Tag','PortLabel'); 
    hportdata = uicontrol('Parent',hippanel,...
        'Style','edit',...
        'Units','normalized',...
        'Position',[0.05 0.40 0.85 0.15],...
        'String','7',...
        'Backgroundcolor',[1 1 1],...
        'Enable','on',...
        'Callback','',...
        'Tag','changePort');
    hconfigure =   uicontrol('Parent',hippanel,...
        'Style','pushbutton',...
        'Units','normalized',...
        'Position',[0.15 0.12 0.7 0.2],...
        'BackgroundColor',get(fig,'Color'),...
        'String','Configure',...
        'Enable','on',...
        'Callback',@configurebutton_callback,...
        'HandleVisibility','callback',...
        'Tag', 'configure');%#ok
%**************IP Configure Panels END***************************%

%**********Panel for all buttons i.e%Start/Stop/Record/etc..******%

%******** Create a panel for operations that can be performed*****%

    hop = uipanel('Parent',fig,...
        'Units','normalized',...
        'Position',[0.02 0.02 0.25 0.65],...
        'Title','Operations',...
        'TitlePosition','centertop',...
        'BackgroundColor',get(fig,'Color'),...
        'HandleVisibility','callback',...
        'FontWeight','bold',...
        'Tag','operationPanel');
    strings = {'Start','Stop', 'Record', 'Raw'};
    positions = [0.01 0.25 0.5 0.75];
    tags = {'startb','stopb', 'recordb', 'rawb'};
    callbacks = {@startbutton_callback, @stopbutton_callback @recordbutton_callback, @localRawPressed};
    enabled ={'on','on', 'on', 'on'};
    for idx = 1:length(strings)
        uicontrol('Parent',hop,...
            'Style','pushbutton',...
            'Units','normalized',...
            'Position',[0.05 positions(idx)*0.7 0.45 0.1],...
            'BackgroundColor',get(fig,'Color'),...
            'String',strings{idx},...
            'Enable',enabled{idx},...
            'Callback',callbacks{idx},...
            'FontSize',10,...
            'HandleVisibility','callback',...
            'Tag',tags{idx});
    
    end
    
    strings = {'Ex1','Ex2', 'Ex3', 'Ex4'};
    positions = [0.01 0.25 0.5 0.75];
    tags = {'exb1','exb2b', 'exb3', 'exb4'};
    callbacks = {@localexb1Pressed, @localex2Pressed @localex3Pressed, @localex4Pressed};
    enabled ={'off','off', 'off', 'off'};
    for idx1 = 1:length(strings)
        uicontrol('Parent',hop,...
            'Style','pushbutton',...
            'Units','normalized',...
            'Position',[0.5 positions(idx1)*0.7 0.45 0.1],...
            'BackgroundColor',get(fig,'Color'),...
            'String',strings{idx1},...
            'Enable',enabled{idx1},...
            'FontSize',10,...
            'Callback',callbacks{idx},...
            'HandleVisibility','callback',...
            'Tag',tags{idx1});
    
    end
    
     hsendtext = uicontrol('Parent',hop,...
        'Style','text',...
        'Units','normalized',...
        'Position',[0.05 0.68 0.85 0.3],...
        'Enable', 'on',...
        'BackgroundColor',get(fig,'Color'),...
        'String','String to be sent:',...
        'HorizontalAlignment','left',...
        'Tag','sendLabel'); 
    hsenddata = uicontrol('Parent',hop,...
        'Style','edit',...
        'Units','normalized',...
        'Position',[0.05 0.8 0.85 0.1],...
        'String','',...
        'Backgroundcolor',[1 1 1],...
        'Enable','on',...
        'Tag','stringdata');
    hsendbutton =   uicontrol('Parent',hop,...
        'Style','pushbutton',...
        'Units','normalized',...
        'Position',[0.15 0.68 0.7 0.1],...
        'BackgroundColor',get(fig,'Color'),...
        'String','Send',...
        'FontSize',10,...
        'Enable','on',...
        'Callback',@sendbutton_callback,...
        'HandleVisibility','callback',...
        'Tag', 'sendb');
 %******************Operation Panel Ends Here******************************
 
 %*******************Data Display Panels***********************************
 
  hdisp1 = uipanel('Parent',fig,...
        'Units','normalized',...
        'Position',[0.28 0.51 0.35 0.47],...
        'Title','Rawinput1',...
        'TitlePosition','centertop',...
        'BackgroundColor',get(fig,'Color'),...
        'HandleVisibility','callback',...
        'FontWeight','bold',...
        'FontSize',12,...
        'Tag','RawInputpanel1');
    
     hdisp2 = uipanel('Parent',fig,...
        'Units','normalized',...
        'Position',[0.63 0.51 0.35 0.47],...
        'Title','Rawinput2',...
        'TitlePosition','centertop',...
        'BackgroundColor',get(fig,'Color'),...
        'HandleVisibility','callback',...
        'FontWeight','bold',...
        'FontSize',12,...
        'Tag','RawInputpanel2');
    
     hdisp3 = uipanel('Parent',fig,...
        'Units','normalized',...
        'Position',[0.28 0.02 0.35 0.47],...
        'Title','I-Component',...
        'TitlePosition','centertop',...
        'BackgroundColor',get(fig,'Color'),...
        'HandleVisibility','callback',...
        'FontWeight','bold',...
        'FontSize',12,...
        'Tag','icomp');
    
     hdisp4 = uipanel('Parent',fig,...
        'Units','normalized',...
        'Position',[0.63 0.02 0.35 0.47],...
        'Title','Q-Component',...
        'TitlePosition','centertop',...
        'FontSize',12,...
        'BackgroundColor',get(fig,'Color'),...
        'HandleVisibility','callback',...
        'FontWeight','bold',...
        'Tag','qcomp');
    
    hraw1ax = axes('Parent',hdisp1,...
         'Position',[0.1 0.1 0.8 0.8],...
         'Box','on',...
         'XGrid','on',...
         'YGrid','on');
     
     hraw2ax = axes('Parent',hdisp2,...
         'Position',[0.1 0.1 0.8 0.8],...
         'Box','on',...
         'XGrid','on',...
         'YGrid','on');
     
      hiax = axes('Parent',hdisp3,...
         'Position',[0.1 0.1 0.8 0.8],...
         'Box','on',...
         'XGrid','on',...
         'YGrid','on');
     
      hqax = axes('Parent',hdisp4,...
         'Position',[0.1 0.1 0.8 0.8],...
         'Box','on',...
         'XGrid','on',...
         'YGrid','on');
     
 %********CHange in the properties of the axes are done here**********%
    global xlimit;
    global ylimit;
    global xstart;
    global ystart;
    global uPlotraw1;
    global uPlotraw2;
    global uPloticomp;
    global uPlotqcomp;
    
    xstart = 0;
    ystart = -50;
    xlimit = 70;
    ylimit = 50;
    
    
    xlabel(hraw1ax,'Number of Samples');
    xlim(hraw1ax,[xstart xlimit]);
    ylabel(hraw1ax,'Amplitude');
    ylim(hraw1ax,'auto');
    xlabel(hraw2ax,'Number of Samples');
    xlim(hraw2ax,[xstart xlimit]);
    ylabel(hraw2ax,'Amplitude');
    ylim(hraw2ax,[-2 2]);
    xlabel(hiax,'Number of Samples');
    xlim(hiax,[xstart xlimit]);
    ylabel(hiax,'Amplitude');
    ylim(hiax,[0 150]);
    xlabel(hqax,'Number of Samples');
    xlim(hqax,[xstart xlimit]);
    ylabel(hqax,'Amplitude');
    ylim(hqax,[ystart 35]);
    
    
    uPlotraw1 = animatedline(hraw1ax,'Color','m', 'MaximumNumPoints', 50,'LineWidth',1);
    uPlotraw2 = animatedline(hraw2ax,'Color','r', 'MaximumNumPoints', 100,'LineWidth',1);
    uPloticomp = animatedline(hiax,'Color','b', 'MaximumNumPoints', 100,'LineWidth',1);
    uPlotqcomp = animatedline(hqax,'Color','k', 'MaximumNumPoints', 100,'LineWidth',1);
   
    %Create GUI Handles for the figure
    ad.handles = guihandles(fig);
    %Save the application data
    guidata(fig,ad);
        set(ad.handles.stopb,'Enable','off');
        set(ad.handles.startb,'Enable','off');
        set(ad.handles.rawb,'Enable','off');
        set(ad.handles.recordb,'Enable','off');
        set(ad.handles.sendb,'Enable','off');
    %move GUI to the center and make it visible
    %  movegui(fig,'center');
 %********************************************************************%
 %*****************GUI Designing part ends here***********************%
 %********************************************************************%
 

end
%********************************************************************%
%********Callback function and data processing part below************%
%********************************************************************%
 
function configurebutton_callback(hObject, eventdata)
global ipdata;
global portdata;

        ad = guidata(hObject);
        set(ad.handles.stopb,'Enable','off');
        set(ad.handles.startb,'Enable','on');
        set(ad.handles.rawb,'Enable','off');
        set(ad.handles.recordb,'Enable','off');
        ipdata = (char(get(ad.handles.changeIP,'String')));
        portdata = str2num(char(get(ad.handles.changePort,'String')));
        disp(ipdata);
        disp(portdata);

end

function startbutton_callback(hObject, eventdata)

 ad = guidata(hObject);
 
        set(ad.handles.stopb,'Enable','on');
        set(ad.handles.startb,'Enable','off');
        set(ad.handles.rawb,'Enable','off');
        set(ad.handles.recordb,'Enable','on');
        set(ad.handles.sendb,'Enable','off');
        set(ad.handles.configure,'Enable','off');
        
        
global ipdata;
global portdata;
global xData;
global xmin;
global xmax;
global uPlotraw1;
global uPlotraw2;
global uPloticomp;
global uPlotqcomp;
global xstart;
global xlimit;
global udpClient;
xmin =1;
xmax = 50;

        udpClient = udp(ipdata,portdata);
        udpClient.RemotePort = 7;
        udpClient.LocalPort =7;
        set(udpClient, 'Timeout',inf);
        udpClient.InputBufferSize = 1000000;
        udpClient.ByteOrder = 'littleEndian';
        udpClient.DatagramTerminateMode = 'off';
        udpClient.RecordMode = 'append';
        udpClient.RecordDetail = 'verbose';
        udpClient.RecordName = 'WaveForms12.txt';
        fopen(udpClient);
        pause(1);
%         udpClient.ReadAsyncMode = 'continuous';
        fprintf(udpClient,'%s','START');
        readasync(udpClient);
        xData = 1:50;
  while(1)      
        data = fread(udpClient,50,'int32');
        res_data = reshape(data,[1,50]);
        
                signal_1 = res_data(1,1:50);
%                 signal_2 = res_data(2,1:100);
%                 signal_3 = res_data(3,1:100);
%                 signal_4 = res_data(4,1:100);
                xData = 1:50;
                addpoints(uPlotraw1, xData, signal_1);
%                 addpoints(uPlotraw2, xData, signal_2);
%                 addpoints(uPloticomp, xData, signal_3);
%                 addpoints(uPlotqcomp, xData, signal_4);
                xData = xmax + 1:xmax + 50;
                xstart = xstart + 50;
                xlimit = xlimit  + 50;
        %            index = index + 1;
            
            drawnow ;
  end
end

function stopbutton_callback(hObject,eventdata)
global udpClient;
 ad = guidata(hObject);
        set(ad.handles.stopb,'Enable','off');
        set(ad.handles.startb,'Enable','on');
        set(ad.handles.rawb,'Enable','on');
        set(ad.handles.recordb,'Enable','off');
        set(ad.handles.configure,'Enable','on');
set(udpClient,'Timeout',1);
flushinput(udpClient);
fclose(udpClient);
end


function recordbutton_callback(hObject,eventdata)
global udpClient;
 ad = guidata(hObject);
%%set(ad.handles.recordb,'Enable','off');
record(udpClient,'on');



end

function sendbutton_callback(hObject,eventdata)
global udpClient;
ad = guidata(hObject);

sendstring = (char(get(ad.handles.stringdata,'String')));
fprintf(udpClient,'%s',sendstring);

end




function localCloseRequestFcn(hObject,eventdata)
delete(gcbo);
fclose(udpClient);
delete(udpClient);
delete(figureHandle)
end